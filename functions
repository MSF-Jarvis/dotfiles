#!/usr/bin/env bash

# Source common functions
SCRIPT_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
source ${SCRIPT_DIR}/common
source ${SCRIPT_DIR}/gitshit
source ${SCRIPT_DIR}/apps

function cpuinfo {
    grep -E '^model name|^cpu MHz' /proc/cpuinfo
}

function battinfo {
    local BASE=/sys/class/power_supply/BAT0/
    declare -a ITEMS=("capacity_level:Battery_status" "charge_now:Current_charge" "capacity:Battery_percentage" "status:Status")
    for ITEM in ${ITEMS[@]};do
        NODE=$(echo ${ITEM} | cut -d ':' -f 1)
        LABEL=$(echo ${ITEM} | cut -d ':' -f 2)
        echo -e "${CL_RED}$(echo ${LABEL} | sed 's/_/ /g')${CL_RST}: ${CL_YLW}$(cat ${BASE}${NODE})${CL_RST}"
    done
}

# Server tooling
function startserver {
  gcloud compute instances start --project "heroic-diode-189916" --zone "us-west1-c" "jarvisbox"
}

function stopserver {
  gcloud compute instances stop --project "heroic-diode-189916" --zone "us-west1-c" "jarvisbox"
}

function serverconnect {
  gcloud compute --project "heroic-diode-189916" ssh --zone "us-west1-c" "jarvisbox"
}

function backup {
    adb-sync --reverse /sdcard/* ~/git-repos/backups/
}

# Random utility tooling
function weather {
    if (( `tput cols` < 125 )); then # 125 is min size for correct display
        [ -z "$1" ] && curl "wttr.in/Ghaziabad?0" || curl "wttr.in/~$1?0"
    else
        [ -z "$1" ] && curl "wttr.in/Ghaziabad" || curl "wttr.in/~$1"
    fi
}

function reboot {
  echo "Do you really wanna reboot??"
  read confirmation
  case "${confirmation}" in
      'y'|'Y')
          $(which reboot)
          ;;
      *)
          ;;
  esac
}

# Kernel stuff

function kgrep {
    find . -name .git -prune -o -path ./out -prune -o -regextype posix-egrep \
        -iregex '(.*\/Makefile|.*\/Kconfig|.*\/oneplus3_defconfig|.*\/caesium_defconfig|.*\/wahoo_defconfig)' -type f \
        -exec grep --color -n "$@" {} +
}

function flasherThingy {
    cd ~/Downloads/walleye
    for file in $(adb-walleye shell ls /sdcard/Download/FlashKernel-Walleye-${1}-*.img);do
        partition=$(echo ${file} | cut -d '-' -f 5 | sed 's/\.img//')
        reportWarning "Pulling ${file}"
        if [[ ${partition} == "boot" ]];then
            adb-walleye pull /sdcard/MagiskManager/patched_boot.img $(basename ${file})
        else
         adb-walleye pull /sdcard/Download/$(basename ${file})
        fi
    done
    read -n 1 -s -r -p "Press any key to continue..."
    reportWarning "Rebooting to bootloader"
    adb-walleye reboot bootloader
    sleep 5
    for file in $(ls FlashKernel-Walleye-${1}-*.img);do
        partition=$(echo ${file} | cut -d '-' -f 5 | sed 's/\.img//')
        fastboot flash ${partition} ${file}
    done
    echoText "Flashing complete, rebooting"
    fastboot reboot
}


function findJ {
    ag -ia ${1} | grep java | cut -f 1 -d ':' | uniq
}

function fao {
    [ -z ${1} ] && echoText "Supply a filename moron" && return
    [ -z ${2} ] && nano -L $(find -name ${1}.*) || nano -L $(find ${2} -name ${1}.*)
}

function night {
    sudo echo 1 > /sys/class/backlight/intel_backlight/brightness
    sudo pkill xflux # In case it's already running. Erring on the side of caution here.
    xflux -l 28.6869 -g 77.3525 -r 1 -k 2000
}