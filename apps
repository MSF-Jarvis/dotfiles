#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <msfjarvis@gmail.com>
# SPDX-License-Identifier: GPL-3.0-only

CURRENT_DEVICE=walleye

# Source common functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/common"

function am() {
    adb shell am "${@}"
}

function pm() {
    adb shell pm "${@}"
}

function cmd() {
    adb shell cmd "${@}"
}

function set_device() {
    CURRENT_DEVICE="${1:?}"
}

function makeapk() {
    if [ ! -f "build.gradle" ] && [ ! -f "build.gradle.kts" ]; then {
        reportError "No gradle configuration found!"
        return 1
    }; fi
    local GRADLE COMMAND
    if [ -z "$(which gradle)" ]; then
        GRADLE="./gradlew"
    else
        GRADLE="gradle"
    fi
    if [ ! -f ".variant" ]; then
        if [ "${1}" != "install" ]; then
            COMMAND="assemble${1:-Debug}"
        elif [ "${1}" == "install" ]; then
            COMMAND="installDebug"
        fi
        if [ "${2}" == "install" ]; then
            COMMAND="install${COMMAND/assemble/}"
        fi
    else
        [ "${1}" == "install" ] && COMMAND="install$(cat .variant)" || COMMAND="assemble$(cat .variant)"
    fi
    findapks "." | while read -r apk; do rm -v "${apk}"; done
    "${GRADLE}" "${COMMAND}"
}

function pushthemetg() {
    tg "${1}" "${THEME_TESTERS_CHAT_ID}" "${2}"
}

function findapks() {
    local DIR
    DIR="."
    if [ ! -z "${1}" ]; then
        DIR="${1}"
    fi
    fd -HI "\.apk$" "${DIR}"
}

function p2d() {
    adb-whyred shell mount system
    local FINAL_PATH
    FINAL_PATH=$(adb-whyred shell find /system -name "$(basename "${1}")")
    echo "${FINAL_PATH}"
    adb-whyred push "$1" "${FINAL_PATH}"
    adb-whyred shell umount system
}

function andromeda() {
    bash ~/git-repos/andromeda_startup_scripts/Linux/start_andromeda.sh
}

function fao() {
    if [ -z "${1}" ]; then echoText "Supply a filename moron" && return; fi
    if [ -z "${2}" ]; then nano -L "$(fd ".*$" .)"; else nano -L "$(fd ".*$" "${2}")"; fi
}

function adbp() {
    local RAW_PACKAGE_PATH
    RAW_PACKAGE_PATH="$(adb-"${CURRENT_DEVICE}" shell pm path "${1}")"
    if [ "${RAW_PACKAGE_PATH}" != "" ]; then
        adb-"${CURRENT_DEVICE}" pull "$(echo "${RAW_PACKAGE_PATH}" | cut -d ':' -f 2)" "${1}".apk
    else
        echoText "Package not found"
    fi
}
