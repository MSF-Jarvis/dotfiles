#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <msfjarvis@gmail.com>
# SPDX-License-Identifier: GPL-3.0-only

CURRENT_DEVICE=walleye

# Source common functions
SCRIPT_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
source "${SCRIPT_DIR}/common"

function am {
    adb shell am "${@}"
}

function pm {
    adb shell pm "${@}"
}

function cmd {
    adb shell cmd "${@}"
}

function set_device {
    CURRENT_DEVICE="${1:?}"
}

function makeapk {
    if [ ! -f "build.gradle" ] && [ ! -f "build.gradle.kts" ]; then { reportWarning "No build.gradle present, dimwit"; return 1; }; fi
    local GRADLE_COMMAND
    if [ ! -f ".variant" ]; then
        if [ "${1}" != "install" ]; then
            GRADLE_COMMAND="assemble${1:-Debug}"
        elif [ "${1}" == "install" ]; then
            GRADLE_COMMAND="installDebug"
        fi
        if [ "${2}" == "install" ]; then
            GRADLE_COMMAND="install${GRADLE_COMMAND/assemble/}"
        fi
    else
        [ "${1}" == "install" ] && GRADLE_COMMAND="install$(cat .variant)" || GRADLE_COMMAND="assemble$(cat .variant)"
    fi
    rm -rfv app/build/outputs/apk/*
    rm -rfv build/outputs/apk/*
    bash gradlew "${GRADLE_COMMAND}"
}

function pushthemetg {
    tg "${1}" "${THEME_TESTERS_CHAT_ID}" "${2}"
}

function findapks {
  find "$@" -name "*.apk"
}

function p2d {
  adb-"${CURRENT_DEVICE}" shell mount system
  local FINAL_PATH
  FINAL_PATH=$(adb-"${CURRENT_DEVICE}" shell find /system -name "$(basename "${1}")")
  echo "${FINAL_PATH}"
  adb-"${CURRENT_DEVICE}" push "$1" "${FINAL_PATH}"
  adb-"${CURRENT_DEVICE}" shell umount system
}

function andromeda {
    bash ~/git-repos/andromeda_startup_scripts/Linux/start_andromeda.sh
}

function fao {
    if [ -z "${1}" ]; then echoText "Supply a filename moron" && return; fi
    if [ -z "${2}" ]; then nano -L "$(find . -name "${1}.*")"; else nano -L "$(find "${2}" -name "${1}.*")"; fi
}

function adbp {
    local RAW_PACKAGE_PATH
    RAW_PACKAGE_PATH="$(adb-"${CURRENT_DEVICE}" shell pm path "${1}")"
    if [ "${RAW_PACKAGE_PATH}" != "" ]; then
        adb-"${CURRENT_DEVICE}" pull "$(echo "${RAW_PACKAGE_PATH}" | cut -d ':' -f 2)" "${1}".apk
    else
        echoText "Package not found"
    fi
}
