#!/bin/bash

# Source common functions
SCRIPT_DIR="$(cd "$( dirname $( readlink -f "${BASH_SOURCE[0]}" ) )" && pwd)"
source ${SCRIPT_DIR}/common

function build {
    . build/envsetup.sh
    [[ ${SKIP_SYNC} == "true" ]] || reposync turbo
    pick_and_reset
    tgm "Build started."
    [[ ${CLEAN} == "true" ]] && rm -rf out/target/product/${TARGET_DEVICE}
    build full XOS_${TARGET_DEVICE}-userdebug noclean 2>&1 | tee -a build_log.txt
    echo "$(tail -n 500 build_log.txt)" > build_log.txt
    [ -f ${OUT}/${XOS_VERSION}.zip ] && upload || tgm "Build failed." && tgm $(hastebin build_log.txt noraw) && return 1
}

function upload {
    cd $OUT
    FILE=${XOS_VERSION}.zip
    ZIP_SIZE_MB=$(du -h ${FILE} | awk '{print $1}' | sed 's/M//')
    tgm "Uploading the zip ${FILE}"
    tgm "zip size ${ZIP_SIZE_MB} MB"
    UPLOAD_DURATION=$(bc <<< "${ZIP_SIZE_MB}/54") # assuming 54mBps as a consistent upload speed
    tgm "Estimated upload duration: ${UPLOAD_DURATION} seconds"
    GDRIVE_UPLOAD_ID=$(gdrive upload ${FILE} | awk '{print $2}')
    GDRIVE_UPLOAD_ID=$(echo ${GDRIVE_UPLOAD_ID} | awk '{print $2}')
    BUILD_URL=$(printf "https://drive.google.com/uc?id=%s&export=download" ${GDRIVE_UPLOAD_ID})
    tgm "[${XOS_VERSION}.zip]($BUILD_URL) uploaded"
    cd ${ANDROID_BUILD_TOP}
}

function init_if_needed {
    [[ -d .repo/ ]] && return
    repo init -u git://github.com/halogenOS/android_manifest -b XOS-8.1
    repo sync -c --no-tags -f build/make external/xos
    . build/envsetup.sh
    reposync turbo
}

function pick_and_reset {
  [[ ${RESET} == "true" ]] && reporeset
  if [[ ${REPOPICK_TASKS} != "" ]]; then
    IFS=$'\n' read -r -a REPOPICKS <<< "${REPOPICK_TASKS}"
    for TASK in "${REPOPICKS[@]}"; do
      echo ${TASK}
      repopick $(echo ${TASK} | sed 's#,# #g')
    done
  fi
}

function notify {
    tgm "Building for device : ${TARGET_DEVICE}"
    [[ ${CLEAN} == "true" ]] && tgm "Building clean" || tgm "Not building clean"
    TEMP=$(echo ${REPOPICK_TASKS} | sed s/\n//)
    [[ ${TEMP} != "" ]] && tgm "repopick tasks : ${REPOPICK_TASKS}" || tgm "No repopicks"
}

mkdir -p ${HOME}/xossrc
cd ${HOME}/xossrc

while getopts ":cst:" opt; do
  case $opt in
     c)
      CLEAN=true
      ;;
     s)
      SKIP_SYNC=true
      ;;
     t)
      TARGET_DEVICE=${OPTARG}
      ;;
     \?)
      echo "Invalid option: -${OPTARG}" >&2
      ;;
   esac
done
REPOPICK_TASKS=$(cat repopicks.txt)
XOS_VERSION=XOS_${TARGET_DEVICE}_8.1_$(date +%Y%m%d)

init_if_needed
notify
build