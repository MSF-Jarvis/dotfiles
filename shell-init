#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <me@msfjarvis.dev>
# SPDX-License-Identifier: GPL-3.0-only

SCRIPT_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
export SCRIPT_DIR

# Nix installer
# shellcheck disable=SC1090
if [ -e "${HOME}"/.nix-profile/etc/profile.d/nix.sh ]; then
  source "${HOME}"/.nix-profile/etc/profile.d/nix.sh
fi

# Bash completion
# shellcheck disable=SC1090
if [ -d "${HOME}"/bash_completion.d ]; then
  for COMPLETION in "${HOME}/bash_completion.d/"*; do
    # shellcheck disable=SC1090
    [[ -r $COMPLETION ]] && source "$COMPLETION"
  done
fi

# bash history setup
export HISTCONTROL="ignoreboth"

# Shell PS1
# shellcheck disable=SC2154
export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]: \[\033[01;34m\]\W\[\033[00m\]$(__git_ps1 " (%s)") \$ '

# Set ccache dir
export CCACHE_DIR="${HOME}/.ccache"

# Android env variables
export ANDROID_SDK_ROOT="${HOME}"/Android/Sdk
export ANDROID_HOME="${ANDROID_SDK_ROOT}"
export GRADLE_USER_HOME=/mnt/mediahell/.gradle
export PATH="${ANDROID_SDK_ROOT}/platform-tools:${PATH}"

# Nano love
export EDITOR=nano

# Setup zoxide and fzf
export FZF_DEFAULT_COMMAND='fd -tf'
if type zoxide &>/dev/null; then
  eval "$(zoxide init bash)"
  alias cd=z
fi

# SDKMAN!
export SDKMAN_DIR="${HOME}/.sdkman"
# shellcheck disable=SC1090
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

# jEnv
[ -d "${HOME}/.jenv" ] && {
  export PATH="${HOME}/.jenv/bin:${PATH}"
  eval "$(jenv init -)"
}

# Local bin directory
[ -d "${HOME}/bin" ] && export PATH="${HOME}/bin:${PATH}"

# cargo env
# shellcheck disable=SC1090
[ -f "${HOME}"/.cargo/env ] && source "${HOME}"/.cargo/env

# Golang binaries
[ -d "${HOME}/go/bin" ] && export PATH="${HOME}/go/bin:${PATH}"

# shellcheck source=bash_completions.bash
source "${SCRIPT_DIR}"/bash_completions.bash
# shellcheck source=aliases
source "${SCRIPT_DIR}"/aliases
# shellcheck source=apps
source "${SCRIPT_DIR}"/apps
# shellcheck source=common
source "${SCRIPT_DIR}"/common
# shellcheck source=devtools
source "${SCRIPT_DIR}"/devtools
# shellcheck source=files
source "${SCRIPT_DIR}"/files
# shellcheck source=hosts
source "${SCRIPT_DIR}"/hosts
# shellcheck source=gitshit
source "${SCRIPT_DIR}"/gitshit
# shellcheck source=nix
source "${SCRIPT_DIR}"/nix
# shellcheck source=server
source "${SCRIPT_DIR}"/server
# shellcheck source=system
source "${SCRIPT_DIR}"/system
# shellcheck source=telegram
source "${SCRIPT_DIR}"/telegram
# shellcheck source=wireguard
source "${SCRIPT_DIR}"/wireguard

function reload() {
  # shellcheck disable=SC1090
  source ~/.bashrc
}

if type starship &>/dev/null; then
  eval "$(starship init bash)"
  export STARSHIP_CONFIG="${SCRIPT_DIR}/starship.toml"
fi
