#!/usr/bin/env bash

# Copyright (C) Harsh Shandilya <msfjarvis@gmail.com>
# SPDX-License-Identifier: GPL-3.0-only

# Source common functions
SCRIPT_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
source "${SCRIPT_DIR}"/common

# Send a markdown encoded Telegram message
function tgm() {
    local CHAT_ID
    CHAT_ID="${2}"
    [ "${2}" == "" ] && CHAT_ID="${MSF_TG_ID}"
    curl -F chat_id="${CHAT_ID}" -F parse_mode="markdown" -F disable_web_page_preview="true" -F text="${1}" "https://api.telegram.org/bot${TG_BOT_ID}/sendMessage" >/dev/null 2>&1
}

function tgcow() {
    local CHAT_ID="${1}"
    [ -z "${CHAT_ID}" ] && CHAT_ID="${OP3_CAESIUM_CHAT_ID}"
    shift
    tgm "\`$(cowsay "${@}")\`" "${CHAT_ID}"
}

function tgpaste() {
    local MESSAGE LINK
    [ -f "${1:?}" ] || return
    LINK=$(hastebin "${1}" "no")
    MESSAGE="[$(basename "${1}")](${LINK})"
    tgm "${MESSAGE}"
}

# Upload a file to Telegram
# SC2076: Don't quote rhs of =~, it'll match literally rather than as a regex.
function tg() {
    local CHAT_ID
    local CAPTION
    CAPTION="${3}"
    if [ "${2}" == "" ]; then
        CHAT_ID="${MSF_TG_ID}"
    elif [[ "${2}" =~ "-100" ]]; then
        CHAT_ID="${2}"
    else
        CAPTION="${2}"
        CHAT_ID="${MSF_TG_ID}"
    fi
    curl -F chat_id="${CHAT_ID}" -F document="@${1}" -F caption="${CAPTION}" -F parse_mode="Markdown" "https://api.telegram.org/bot${TG_BOT_ID}/sendDocument" >/dev/null 2>&1
}

# Upload a file to transfer.sh, and send the link to telegram
function ttg() {
    [ ! -f "${1:?}" ] && return 1
    URL=$(transfer "${1}")
    [ -z "${URL}" ] && return 1
    tgm "[$(basename "${1}")](${URL})" "${2}"
}
