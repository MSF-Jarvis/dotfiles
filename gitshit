#!/usr/bin/env bash

# SPDX-License-Identifier: GPL-3.0-only #

AOSIP_GERRIT_USER=MSF-Jarvis
GZOSP_GERRIT_USER=${AOSIP_GERRIT_USER}
SUBS_GERRIT_USER=MSF_Jarvis
ANDROID_PLATFORM_ROOT="/home/msfjarvis/aosip"
DEFAULT_AOSIP_BRANCH="oreo-mr1"
DEFAULT_SUBS_BRANCH="o"
DEFAULT_GZOSP_BRANCH="8.1"
AOSIP_GERRIT_URL="review.aosiprom.com"
GZOSP_GERRIT_URL="review.gzospgzr.com"
SUBS_GERRIT_URL="substratum.review"
DEFAULT_GERRIT="aosip"

function get_current_gerrit {
    if [[ ${DEFAULT_GERRIT} == "aosip" ]]; then
        echo "${AOSIP_GERRIT_USER}@${AOSIP_GERRIT_URL}"
    elif [[ ${DEFAULT_GERRIT} == "substratum" ]]; then
        echo "${SUBS_GERRIT_USER}@${SUBS_GERRIT_URL}"
    elif [[ ${DEFAULT_GERRIT} == "gzosp" ]]; then
        echo "${GZOSP_GERRIT_USER}@${GZOSP_GERRIT_URL}"
    else
        return 1
    fi
}

function hook {
    local gitdir=$(git rev-parse --git-dir)
    scp -p -P 29418 $(get_current_gerrit):hooks/commit-msg ${gitdir}/hooks/
}

function gerrit {
    ssh -p 29418 $(get_current_gerrit) gerrit $@
}

function subsgerrit {
    ssh -p 29418 ${SUBS_GERRIT_USER}@${SUBS_GERRIT_URL} gerrit $@
}

function gpush {
    declare -a PARAMS=("$@")
    local BRANCH=${DEFAULT_AOSIP_BRANCH}
    if [[ ${#PARAMS[@]} -eq 2 ]]; then
        BRANCH=${PARAMS[0]}
        if [[ ${PARAMS[1]} == bypass ]]; then
            git push gerrit HEAD:refs/for/${BRANCH}
        else
            git push gerrit HEAD:refs/for/${BRANCH}/${1}
        fi
    elif [[ ${#PARAMS[@]} -eq 1 ]]; then
        git push gerrit HEAD:refs/for/${BRANCH}/${PARAMS[0]}
    else
        git push gerrit HEAD:refs/for/${BRANCH}
    fi
}

function gzpush {
    gpush 8.1 bypass
}

function gfpush {
    BRANCH=${1}
    [[ ${BRANCH} == "" ]] && BRANCH=${DEFAULT_AOSIP_BRANCH}
    git push gerrit HEAD:refs/heads/${BRANCH}
}

function gffpush {
    BRANCH=${1}
    [[ ${BRANCH} == "" ]] && BRANCH=${DEFAULT_AOSIP_BRANCH}
    git push --force gerrit HEAD:refs/heads/${BRANCH}
}

echo "
function createXos {
    if ! git rev-parse --git-dir &> /dev/null; then
        reportError ".git directory not found. Please run this from the root directory of the Android repository you wish to set up."
        return 1
    fi
    local PROJECT=$(pwd -P | sed -e "s#$ANDROID_PLATFORM_ROOT/##; s#-caf.*##; s#\/default##; s#/#_#g#")
    ssh ${AOSIP_GERRIT_USER}@${AOSIP_GERRIT_URL} -p 29418 \
        gerrit create-project -p All-Projects -t REBASE_IF_NECESSARY \
        android_${PROJECT}
    git create halogenOS/android_${PROJECT}
}" >/dev/null

function xg {
    if ! git rev-parse --git-dir &> /dev/null; then
        reportError ".git directory not found. Please run this from the root directory of the Android repository you wish to set up."
        return 1
    fi
    local PROJECT=$(pwd -P | sed -e "s#${ANDROID_PLATFORM_ROOT}/##; s#-caf.*##; s#\/default##; s#/#_#g#")
    git remote remove gerrit 2>/dev/null
    git remote add gerrit ssh://${AOSIP_GERRIT_USER}@${AOSIP_GERRIT_URL}:29418/AOSiP/platform_${PROJECT}
    hook
#   git remote add gerrit https://$AOSIP_GERRIT_USER@${AOSIP_GERRIT_URL}:29418/a/android_$(echo $PROJECT | sed "s#$ANDROID_PLATFORM_ROOT/##" | sed "s#/#_#g#")
}

function gz {
    if ! git rev-parse --git-dir &> /dev/null
    then
        reportError ".git directory not found. Please run this from the root directory of the Android repository you wish to set up."
        return 1
    fi
    PROJECT=$(pwd -P | sed -e "s#${ANDROID_PLATFORM_ROOT}/##; s#-caf.*##; s#\/default##; s#/#_#g#")
    if (echo ${PROJECT} | grep -qv "^device")
    then
        PFX="GZOSP/"
    fi
    git remote remove gzgerrit 2>/dev/null
    git remote add gerrit ssh://${GZOSP_GERRIT_USER}@${GZOSP_GERRIT_URL}:29418/${PFX}${PROJECT}
}

function subs {
    if ! git rev-parse --git-dir &> /dev/null
    then
        reportError ".git directory not found. Please run this from the root directory of the Android repository you wish to set up."
        return 1
    fi
    PROJECT=$(pwd -P | sed -e "s#${ANDROID_PLATFORM_ROOT}/##; s#-caf.*##; s#\/default##; s#/#_#g#")
    if (echo ${PROJECT} | grep -qv "^device")
    then
        PFX="SubstratumResources/platform_"
    fi
    git remote remove gzgerrit 2>/dev/null
    git remote add gerrit ssh://${SUBS_GERRIT_USER}@${SUBS_GERRIT_URL}:29418/${PFX}${PROJECT}
}
